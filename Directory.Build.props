<Project>
    <!-- For all projects -->
    <PropertyGroup>
        <!-- Compiler settings -->
        <LangVersion>latest</LangVersion>
        <Nullable>enable</Nullable>
        <ImplicitUsings>true</ImplicitUsings>
        <Deterministic>true</Deterministic>
        <GeneratePackageOnBuild>false</GeneratePackageOnBuild>

        <!-- NuGet Packaging -->
        <Authors>Greg Domzalski</Authors>
        <RepositoryUrl>https://github.com/GregDomzalski/GeNet</RepositoryUrl>
        <Copyright>Copyright (c) Greg Domzalski 2023</Copyright>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PackageIcon>genet_icon.png</PackageIcon>
        <PackageReadmeFile>$(MSBuildProjectName).readme.md</PackageReadmeFile>

        <!-- SourceLink -->
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    </PropertyGroup>

    <ItemGroup>
        <None Include="..\genet_icon.png" Pack="true" PackagePath="\" Visible="false" />
        <None Include="..\docs\packages\$(MSBuildProjectName).readme.md" Pack="true" PackagePath="\" />
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All"/>
    </ItemGroup>

    <!-- Define which project is what type -->
    <PropertyGroup>
        <IsGeNetTestProject Condition="$(MSBuildProjectName.EndsWith('Tests', StringComparison.OrdinalIgnoreCase))">true</IsGeNetTestProject>
        <IsGeNetTestProject Condition="!$(MSBuildProjectName.EndsWith('Tests', StringComparison.OrdinalIgnoreCase))">false</IsGeNetTestProject>
        <IsGeNetCommonProject Condition="$(MSBuildProjectName.EndsWith('Common', StringComparison.OrdinalIgnoreCase))">true</IsGeNetCommonProject>
        <IsGeNetCommonProject Condition="!$(MSBuildProjectName.EndsWith('Common', StringComparison.OrdinalIgnoreCase))">false</IsGeNetCommonProject>
        <IsGeNetGeneratorProject Condition="('$(IsGeNetTestProject)' == 'false') AND ('$(IsGeNetCommonProject)' == 'false')">true</IsGeNetGeneratorProject>
        <IsGeNetGeneratorProject Condition="('$(IsGeNetTestProject)' == 'true') OR ('$(IsGeNetCommonProject)' == 'true')">false</IsGeNetGeneratorProject>
    </PropertyGroup>

    <!-- For generator projects -->
    <PropertyGroup Condition="'$(IsGeNetGeneratorProject)' == 'true'">
        <!-- We don't want to reference the source generator assembly directly in consuming projects -->
        <IncludeBuildOutput>false</IncludeBuildOutput>

        <!-- Extra analysis for Roslyn components, such as source generators -->
        <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>

        <IsRoslynComponent>true</IsRoslynComponent>

        <GetTargetPathDependsOn>$(GetTargetPathDependsOn);GetDependencyTargetPaths</GetTargetPathDependsOn>
    </PropertyGroup>

    <ItemGroup Condition="'$(IsGeNetGeneratorProject)' == 'true'">
        <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4" PrivateAssets="all" />
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.6.0" PrivateAssets="all" />
        <ProjectReference Include="..\GeNet.Common\GeNet.Common.csproj" PrivateAssets="all" />
    </ItemGroup>

    <!-- For common projects -->
    <PropertyGroup Condition="'$(IsGeNetCommonProject)' == 'true'">
        <IsPackable>false</IsPackable>
    </PropertyGroup>

    <ItemGroup Condition="'$(IsGeNetCommonProject)' == 'true'">
        <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4" />
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.6.0" />
    </ItemGroup>

    <!-- For test projects -->
    <PropertyGroup Condition="'$(IsGeNetTestProject)' == 'true'">
        <IsPackable>false</IsPackable>
    </PropertyGroup>

    <ItemGroup Condition="'$(IsGeNetTestProject)' == 'true'">
        <!-- Standard xUnit test packages -->
        <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.5.0" />
        <PackageReference Include="xunit" Version="2.4.2" />
        <PackageReference Include="xunit.runner.visualstudio" Version="2.4.5">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="coverlet.collector" Version="3.2.0">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>

        <!-- Roslyn packages -->
        <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4" PrivateAssets="All" />
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.6.0" PrivateAssets="All" />
    </ItemGroup>
</Project>
