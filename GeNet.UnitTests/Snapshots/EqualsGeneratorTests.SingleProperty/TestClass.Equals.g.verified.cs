//HintName: TestClass.Equals.g.cs
//-----------------------------------------------------------------------------
/// <auto-generated>
///     This code was generated by https://github.com/GregDomzalski/GeNet
///
///     Changes to this file may cause incorrect behavior and will be lost if the code
///     is regenerated.
/// </auto-generated>
//-----------------------------------------------------------------------------

#nullable enable

public partial class TestClass : IEquatable<TestClass>
{
    public override bool Equals(object? obj)
    {
        if (obj is TestClass other)
        {
            return TestClass.Equals(this, other);
        }

        return base.Equals(obj);
    }

    public bool Equals(TestClass? other)
    {
        if (other is null) return false;
        return Prop1 == other.Prop1;
    }

    public override int GetHashCode()
    {
        HashCode hashCode = new HashCode();
        hashCode.Add(Prop1);
        return hashCode.GetHashCode();
    }

    public static bool operator ==(TestClass left, TestClass right)
    {
        return left.Equals(right);
    }

    public static bool operator !=(TestClass left, TestClass right)
    {
        return !(left == right);
    }

}

